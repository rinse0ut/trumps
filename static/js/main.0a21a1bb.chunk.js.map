{"version":3,"sources":["img/will.jpeg","services/firestore.js","components/AuthProvider.tsx","components/AuthRoute.tsx","components/SignUp.tsx","components/SignIn.tsx","components/SignOut.tsx","hooks/useCollection.tsx","components/List.tsx","components/Loading.tsx","components/Layout.tsx","pages/FriendsPage.tsx","pages/CategoryPage.tsx","hooks/useDocument.tsx","pages/StatsPage.tsx","pages/CardsPage.tsx","pages/ChallengePage.tsx","pages/GamesPage.tsx","components/Card.tsx","pages/GamePage.tsx","components/Router.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","signOut","getCollection","path","collection","AuthContext","createContext","undefined","useAuthContext","value","useContext","Error","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","unsubsribe","user","onAuthStateChanged","Provider","AuthRoute","Component","component","rest","console","log","render","routeProps","to","SignUp","username","email","password","error","setUser","handleChange","e","target","name","handleSubmit","a","preventDefault","createUserWithEmailAndPassword","result","updateProfile","displayName","doc","uid","set","myURL","url","sendEmailVerification","message","onSubmit","type","placeholder","onChange","Login","history","useHistory","push","signInWithEmailAndPassword","emailVerified","Logout","handleClick","onClick","useCollection","data","setData","get","snapshot","docs","map","id","fetchData","ListItem","title","description","List","Item","Content","Header","ListComponent","items","Segment","divided","relaxed","size","LoadingContainer","styled","div","Loading","Icon","loading","HeaderContainer","header","H1","h1","LeftAction","MainContainer","ContentContainer","Footer","TitleBar","createTeleporter","location","useLocation","showBackButton","includes","pathname","goBack","inverted","Target","Layout","props","FriendsPage","users","listItems","Source","InputCreate","setTitle","add","stats","cards","CategoryPage","categories","category","useDcoument","isSnapshot","onSnapshot","InputEdit","categoryId","statKey","stat","updatedStat","update","cardKey","StatsPage","useParams","useDocument","Object","entries","IMG_NAMES","cardItem","card","setCard","htmlFor","countryCode","updatedCard","img","CardsPage","ChallengePage","player2Id","form","setForm","values","find","x","p2User","u","pack","p1Id","p1Username","p2Id","p2Username","p1TurnNumber","p2TurnNumber","turnNumber","GamesPage","games","game","Row","status","selectedKey","onSelectStat","player","Table","key","Cell","positive","negative","warning","Card","selectedStatKey","disabled","celled","unstackable","selectable","style","width","marginLeft","HeaderCell","toUpperCase","textAlign","Flag","Body","colSpan","Image","src","will","fluid","sort","b","localeCompare","reverse","useGame","gameId","currentUsername","opponentUsername","currentPlayer","Math","floor","random","turns","hand1","keys","numCards","length","i","index","splice","item","deal","p1Cards","p2Cards","updateCards","playerTurnNumber","currentTurn","setCurrentTurn","handleNextTurn","useCallback","nextTurn","updateTurn","turn","turnKey","getTurn","turnPlayer","getTurnCards","selectedStat","setSelectedStat","handleSelectStat","params","handleTurn","p1UpdatedCards","p2UpdatedCards","drawCards","p1TopCard","p1HandCards","p2TopCard","p2HandCards","p1Value","p2Value","nextPlayer","topCards","p1TopCardKey","p2TopCardKey","debug","turnId","turnNo","p1TurnNo","p2TurnNo","table","playerNum","StyledMessage","align","color","Message","GamePage","resultMsg","currentEmoji","opponentEmoji","currentCard","opponentCard","Button","circular","icon","HomePage","SignOut","Router","SignIn","GameListPage","from","App","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0a21a1bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/will.32aef3bd.jpeg\";","import * as firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// @todo move to .env file\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDPk2j-y4TB9ex6MWD0jZmHXsN2aw6VZv4\",\n  authDomain: \"trumps-53976.firebaseapp.com\",\n  databaseURL: \"https://trumps-53976.firebaseio.com\",\n  projectId: \"trumps-53976\",\n  storageBucket: \"trumps-53976.appspot.com\",\n  messagingSenderId: \"822188667084\",\n  appId: \"1:822188667084:web:56d4680cf508a02ea55269\",\n  measurementId: \"G-FNX5HRRFLY\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nexport const db = firebase.firestore();\n\nexport const authenticateAnonymously = () => {\n  return auth.signInAnonymously();\n};\n\nexport function signUp(email, password) {\n  return auth.createUserWithEmailAndPassword(email, password);\n}\n\nexport function signIn(email, password) {\n  return auth.signInWithEmailAndPassword(email, password);\n}\n\nexport function signOut() {\n  return auth.signOut();\n}\n\nexport function onAuthStateChanged(user) {\n  return auth.onAuthStateChanged(user);\n}\n\nexport function getCollection(path) {\n  return db.collection(path);\n};\n\nexport function getUsers() {\n  return db.collection('users');\n};\n\nexport const getCard = id => {\n  return db\n    .collection('variant').doc('pioneers')\n    .collection('categories').doc('classic')\n    .collection('cards').doc('morgan')\n    .get();\n};\n\n// export const getCard = id => {\n//   return db.collection('cards')\n//       .doc(id)\n//       .get();\n// };","// import React, { createContext, useState, useEffect, useMemo, useContext } from \"react\";\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport * as firebase from 'firebase/app';\nimport { onAuthStateChanged } from '../services/firestore';\nimport { promises } from 'dns';\n\ntype AuthContextType = {\n  currentUser: firebase.User|null;\n}\n\nexport const AuthContext = createContext<AuthContextType|undefined>(undefined);\n\nfunction AuthProvider({ children }: any) {\n\n  const [currentUser, setCurrentUser] = useState<firebase.User|null>(null);\n\n  useEffect(() => {\n    const unsubsribe = onAuthStateChanged((user: any) => {\n      setCurrentUser(user);\n    });\n    return () => {\n      unsubsribe();\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider value={{currentUser}}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport function useAuthContext() {\n  const value = useContext(AuthContext);\n  if (value === undefined) {\n     throw new Error('Expected context value to be set');\n  }\n  return value;\n}\n\nexport default AuthProvider;","import React from 'react';\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\nimport { useAuthContext } from './AuthProvider';\n\ntype PropType = RouteProps & {\n  component: any;\n}\n\nfunction AuthRoute({ component: Component, ...rest }: PropType) {\n  const {currentUser} = useAuthContext();\n  console.log('AUTH_ROUTE USER', currentUser);\n  return (\n    <Route \n      {...rest} \n      render={(routeProps) => (\n        !!currentUser ? (\n          <Component {...routeProps} />\n        ) : (\n          <Redirect to='/signin' />\n        )  \n    )} />\n  );  \n}\n\nexport default AuthRoute;","import React, { useState } from 'react';\n// import './Signup.css';\nimport { db, signUp, signOut } from '../services/firestore';\n\nconst SignUp = () => {\n  // User State\n  const [user, setUser] = useState({\n    username: '',\n    email: '',\n    password: '',\n    error: '',\n  });\n\n  console.log('SIGN UP');\n\n  // onChange function\n  // const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n  const handleChange = (e: any) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n      error: '',\n    })\n  };\n\n  // Submit function (Create account)\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    try {\n      const result = await signUp(user.email, user.password);\n      if (result?.user) {\n        console.log('USER', user);\n        await result.user.updateProfile({\n          displayName: user.username,\n        })\n\n        await db.collection('users').doc(result.user.uid).set({\n          username: user.username,\n          email: user.email\n        });\n\n        // URL of my website.\n        const myURL = { url: 'http://localhost:3000/' }\n\n        // Send Email Verification and redirect to my website.\n        await result.user.sendEmailVerification(myURL);\n\n        setUser({\n          ...user,\n          error: `Welcome ${user.username}. To continue please verify your email.`,\n        })\n\n        // Sign Out the user.\n        signOut();\n\n      }\n    } catch (e) {\n      setUser({\n        ...user,\n        error: e.message\n      })\n    }\n  }\n\n  return (\n    <>\n      <h1>Sign up</h1>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Username\" name=\"username\" onChange={handleChange} /><br />\n        <input type=\"text\" placeholder=\"Email\" name=\"email\" onChange={handleChange} /><br />\n        <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={handleChange} /><br />\n        <button type=\"submit\">Sign Up</button>\n      </form>\n      {user.error && <h4>{user.error}</h4>}\n    </>\n  )\n};\n\nexport default SignUp;","import React, { useState, useContext } from 'react';\nimport { signIn, signOut } from '../services/firestore';\nimport { useAuthContext } from '../components/AuthProvider';\nimport { useHistory } from \"react-router-dom\";\n\nfunction Login() {\n\n  const {currentUser} = useAuthContext();\n\n  const history = useHistory();\n\n  if (currentUser) {\n    history.push(\"/home\");\n  }\n\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n    error: '',\n  });\n\n  const handleChange = (e: any) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n      error: '',\n    })\n  };\n\n  // Submit function (Log in user)\n  const handleSubmit = async (e: any) => {\n    e.preventDefault();\n    try {\n      const result = await signIn(user.email, user.password);\n      if (!result?.user?.emailVerified) {\n        setUser({\n          ...user,\n          error: 'Please verify your email before to continue',\n        });\n        await signOut();\n      } \n      history.push(\"/home\");\n    } catch (e) {\n      setUser({\n        ...user,\n        error: e.message,\n      })       \n    }\n  }\n\n  return (\n    <>\n      <h1>Log In</h1>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Email\" name=\"email\" onChange={handleChange}/><br />\n        <input type=\"password\" placeholder=\"Password\" name=\"password\" onChange={handleChange}/><br />\n        <button type=\"submit\">Log in</button>\n      </form>\n      {user.error && <h4>{user.error}</h4>}\n    </>\n  )\n};\n\nexport default Login;","import React from 'react';\nimport { signOut } from '../services/firestore';\n\nconst Logout = () => {\n\n  // Log out function\n  const handleClick = async () => {\n    await signOut();\n  }\n\n  return (\n    <>\n      <button type=\"button\" onClick={handleClick}>Log Out</button>\n    </>\n  )\n};\n\nexport default Logout;","import React, { useEffect, useState } from \"react\";\nimport {getCollection} from '../services/firestore';\nimport * as firebase from 'firebase/app';\n\ntype item = {\n  id: string;\n  title?: string;\n  email?: string;\n\n}\n\nfunction useCollection<T>(path: string) {\n  // const [data, setData] = useState<T extends {id: string}[] ? any : any | undefined>();\n  const [data, setData] = useState<T[]>();\n\n  useEffect(() => {\n    if (!path) return;\n  \n    async function fetchData() {\n      const snapshot = await getCollection(path).get();         \n      const data = snapshot.docs.map(doc => ({...doc.data(), id: doc.id }));\n      // @ts-ignore\n      setData(data);\n    }\n\n    fetchData();\n  }, [])\n\n  return data;\n}\n\nexport default useCollection;","import React from 'react'\nimport { List, Segment } from 'semantic-ui-react';\nimport { Link } from \"react-router-dom\";\n\ntype ListItem = {\n  title: string;\n  description?: string;\n  url?: string;\n}\n\ntype PropsType = {\n  items: ListItem[];\n}\n\nfunction ListItem({title, description, url}: ListItem) {\n  return (\n    <List.Item>\n      <List.Content>\n        <List.Header>\n          {url ? <Link to={url}>{title}</Link> : title }\n        </List.Header>\n         {description}\n      </List.Content>\n    </List.Item>\n  )\n}\n\nfunction ListComponent({items}: PropsType) {\n  return (\n    <Segment>\n      <List divided relaxed=\"very\" size=\"large\">\n        {items.map(ListItem)}\n      </List>\n    </Segment>\n  )\n}\n\nexport default ListComponent","import React from \"react\";\nimport { Container, Icon } from 'semantic-ui-react';\nimport styled from \"styled-components\";\n\nconst LoadingContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: -70px;\n`;\n\nfunction Loading() {\n  return (\n    <LoadingContainer>\n      <Icon loading name='spinner' size='big' />\n    </LoadingContainer>\n  )\n}\n\nexport default Loading;","import React, { ReactChild } from 'react';\nimport { createTeleporter } from 'react-teleporter';\nimport styled from \"styled-components\";\nimport { useAuthContext } from '../components/AuthProvider';\nimport { Container, Icon } from 'semantic-ui-react';\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst HeaderContainer = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  height: 50px;\n  background: #1b9a59;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 1;\n`;\n\nconst H1 = styled.h1`\n  color: white;\n  margin: 0;\n`;\n\nconst LeftAction = styled.div`\n  position: fixed;\n  left: 0;\n  margin-left: 5px;\n`;\n\nconst MainContainer = styled.div`\n  background: WhiteSmoke;\n  height: 100vh;\n`;\n\nconst ContentContainer = styled.div`\n  padding-top: 50px;\n`;\n\nexport const Footer = styled.div`\n  position: fixed;\n  height: 50;\n  bottom: 0;\n  right: 0;\n  padding: 10px;\n`;\n\ntype PropsType = {\n  children: ReactChild;\n}\n\ntype LocationType = {\n  pathname: string;\n}\n\nexport const TitleBar = createTeleporter()\n\nfunction Header() {\n  const history = useHistory();\n  const location = useLocation<LocationType>();\n  console.log('LOCATION', location);\n  const showBackButton = !['/home', '/signin', '/singout'].includes(location.pathname);\n  return (\n    <HeaderContainer>\n      {showBackButton && <LeftAction onClick={() => history.goBack()}><Icon name='angle left' size='large' inverted/></LeftAction>}\n      <H1><TitleBar.Target /></H1>\n    </HeaderContainer>\n  )\n}\n\nfunction Layout(props: PropsType) {\n  const {children} = props;\n  const {currentUser} = useAuthContext();\n\n  return (\n    <MainContainer>\n      <Header/>\n      <ContentContainer>\n        {children}\n      </ContentContainer>\n    </MainContainer>\n  )\n}\n\nexport default Layout;","import React, { useEffect, useState } from \"react\";\nimport {getUsers} from '../services/firestore';\nimport useCollection from '../hooks/useCollection';\nimport List from '../components/List';\nimport Loading from '../components/Loading';\nimport {TitleBar} from '../components/Layout';\n\nfunction FriendsPage() {\n\n  const users = useCollection<any>('users');\n\n  const listItems = users?.map((user: any) => ({\n    title: `${user.username}`,\n    description: `${user.email}`,\n  }));\n\n  if (!users) {\n    return (\n      <Loading/> \n    )\n  }\n\n  if (!listItems) {\n    return (\n      <div>No users.</div>\n    )\n  }\n\n  return (\n    <>\n      <TitleBar.Source>Friends</TitleBar.Source>\n      <List items={listItems}/>\n    </>\n  )\n}\n\nexport default FriendsPage;","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {db} from '../services/firestore';\nimport {CategoryType} from '../types';\nimport useCollection from '../hooks/useCollection';\n\nfunction CategoryPage() {\n\n  const categories = useCollection<CategoryType>('categories');\n  console.log('CATS', categories);\n\n  // if (categories && !categories.length) {\n  //   return (\n  //     <div>Loading...</div>\n  //   )\n  // }\n\n  return (\n    <>\n      <div>CATEGORY LIST</div>\n      <ul>\n        { categories?.map(category => (\n          <li>\n            {category.title} | \n            <Link to={`/category/${category?.id}/stats`}> Stats</Link> |\n            <Link to={`/category/${category?.id}/cards`}> Cards</Link>\n          </li>\n        )) }\n        {/* { categories.map(category => (<li>{category.title}</li>)) } */}\n        {/* { categories.map(category => (<InputEdit category={category}/>)) } */}\n        <InputCreate/>\n      </ul>\n    </>\n  )\n}\n\ntype CreatePropsType = {\n  category: {id: string; title?: string};\n}\n\nfunction InputEdit({category}: CreatePropsType) {\n  const [title, setTitle] = useState(category.title);\n\n  function handleUpdate() {\n    db.collection('categories').doc(category.id).set({...category, title});\n  }\n\n  return (\n    <>\n      <input \n        value={title}\n        onChange={e => {\n          setTitle(e.target.value)\n        }}\n      />  \n      <button onClick={handleUpdate}>Update</button>\n    </>\n  )\n}\n\nfunction InputCreate() {\n  const [title, setTitle] = useState('');\n\n  function handleCreate() {\n    db.collection('categories').add({title, stats: {}, cards: {}})\n  }\n\n  return (\n    <>\n      <input \n        value={title}\n        onChange={e => {\n          setTitle(e.target.value)\n        }}\n      />  \n      <button onClick={handleCreate}>Add</button>\n    </>\n  )\n}\n\nexport default CategoryPage;","import { useEffect, useState } from \"react\";\nimport {db, getCollection} from '../services/firestore';\nimport * as firebase from \"firebase/app\";\n\nfunction useDcoument<T>(path: string, id: string, isSnapshot: boolean = false) {\n  const [data, setData] = useState<T>();\n  console.log('USE DOC', data);\n\n  useEffect(() => {\n    if (!path) return;\n\n    if (isSnapshot) {\n      return db.collection(path).doc(id).onSnapshot(snapshot => {\n        const data = snapshot.data() as T;\n        console.log('SNAP SHOT', data);\n        setData(data);\n      });\n    }\n  \n    async function fetchData() {\n      const doc = await getCollection(path).doc(id).get();         \n      const data = doc.data() as T;\n      console.log('FETCH DATA', data);\n      setData(data);\n    }\n\n    fetchData();\n  }, [])\n\n  return data;\n}\n\nexport default useDcoument;","import React, { useEffect, useState } from \"react\";\nimport {db} from '../services/firestore';\nimport useDocument from '../hooks/useDocument';\nimport {useParams} from 'react-router-dom';\nimport {CategoryType, StatType} from '../types';\n\nfunction StatsPage() {\n\n  const {categoryId} = useParams<{categoryId:string}>();\n  const category = useDocument<CategoryType>('categories', categoryId, true);\n  console.log('USE DOC RESULT', category);\n\n  if (!category) {\n    return (\n      <div>Loading...</div>\n    )\n  }\n\n  return (\n    <>\n      <div>STATS LIST</div>\n      <ul>\n        { Object.entries(category.stats).map(([statKey, stat])  => (\n          <InputEdit categoryId={categoryId} category={category} statKey={statKey} stat={stat}/>\n        ))}\n        <InputCreate categoryId={categoryId} category={category} />\n      </ul>\n    </>\n  )\n}\n\nfunction InputEdit({categoryId, category, statKey, stat}: any) {\n  const [title, setTitle] = useState(stat.title);\n\n  function handleUpdate() {\n    const updatedStat: {[id: string]: StatType} = {}; \n    updatedStat[`stats.${statKey}`] = {title};\n    db.collection('categories').doc(categoryId).update(updatedStat);\n  }\n\n  function handleDelete() {\n    delete category.stats[statKey];\n    // Remove stat from each card\n    for (let cardKey in category.cards) {\n      delete category.cards[cardKey][statKey];\n    }\n    db.collection('categories').doc(categoryId).set(category);\n  }\n\n  return (\n    <>\n      <input \n        value={title}\n        onChange={e => {\n          setTitle(e.target.value);\n        }}\n      />  \n      <button onClick={handleUpdate}>Update</button>\n      <button onClick={handleDelete}>Delete</button>\n    </>\n  )\n}\n\nfunction InputCreate({categoryId, category}: {categoryId: string; category: CategoryType}) {\n  const [title, setTitle] = useState<string>('');\n\n  function handleCreate() {\n    category.stats[title] = {title};\n    db.collection('categories').doc(categoryId).set(category);\n  }\n\n  return (\n    <>\n      <input \n        value={title}\n        onChange={e => {\n          setTitle(e.target.value)\n        }}\n      />  \n      <button onClick={handleCreate}>Add</button>\n    </>\n  )\n}\n\nexport default StatsPage;","import React, { useEffect, useState } from \"react\";\nimport {db} from '../services/firestore';\nimport useDocument from '../hooks/useDocument';\nimport {useParams} from 'react-router-dom';\nimport {CategoryType, CardType} from '../types';\n\nconst IMG_NAMES = ['ant', 'ben', 'dan', 'didun', 'dt', 'grant', 'mike', 'morgan', 'nick', 'pearce', 'rob', 'scouse', 'stevooo', 'sunny'];\n\nfunction CardsPage() {\n\n  const {categoryId} = useParams<{categoryId:string}>();\n  const category = useDocument<CategoryType>('categories', categoryId, true);\n  console.log('USE DOC RESULT', category);\n\n  if (!category) {\n    return (\n      <div>Loading...</div>\n    )\n  }\n\n  return (\n    <>\n      <div>CARD LIST</div>\n      <ul>\n        { Object.entries(category.cards).map(([cardKey, card])  => (\n          <InputEdit categoryId={categoryId} category={category} cardKey={cardKey} cardItem={card}/>\n        ))}\n        <hr/>\n        <InputCreate categoryId={categoryId} category={category} />\n      </ul>\n    </>\n  )\n}\n\nfunction InputEdit({categoryId, category, cardKey, cardItem}:  {categoryId: string; category: CategoryType, cardKey: string, cardItem: CardType}) {\n  const [card, setCard] = useState<CardType>(cardItem);\n\n  const handleChange = (e: any) => {\n    setCard({\n      ...card,\n      [e.target.name]: e.target.value,\n    })\n  };\n\n  function handleUpdate() {\n    const updatedCard: {[id: string]: CardType} = {}; \n    updatedCard[`cards.${cardKey}`] = card;\n    db.collection('categories').doc(categoryId).update(updatedCard);\n  }\n\n  function handleDelete() {\n    console.log('CAT PRE DELETE', category, cardKey);\n    delete category.cards[cardKey];\n    console.log('CAT POST DELETE', category);\n    db.collection('categories').doc(categoryId).set(category);\n  }\n\n  return (\n    <>\n      <div>\n        <label htmlFor=\"title\">Title</label>   \n        <input \n          name=\"title\"\n          value={card.title}\n          onChange={handleChange}\n        />\n      </div>\n      <br/>  \n      <div>\n        <label htmlFor=\"countryCode\">Country Code</label>   \n        <select\n          name=\"countryCode\"\n          value={card.countryCode}\n          onChange={handleChange}\n        >\n          <option value=\"uk\">UK</option>\n          <option value=\"us\">US</option>\n        </select>\n      </div>\n        { Object.entries(category.stats).map(([statKey, stat])  => (\n          <>    \n            <div>\n              <label htmlFor={statKey}>{stat.title}</label>   \n              <input \n                name={statKey}\n                type=\"number\"\n                value={card[statKey]}\n                onChange={handleChange}\n              />\n            </div>\n            <br/>            \n          </>    \n        ))} \n      <button onClick={handleUpdate}>Update</button>\n      <button onClick={handleDelete}>Delete</button>\n      <br/>\n    </>\n  )\n}\n\nfunction InputCreate({categoryId, category}: {categoryId: string; category: CategoryType}) {\n  const [card, setCard] = useState<CardType>({\n    title: '',\n    countryCode: '',\n  });\n\n  const handleChange = (e: any) => {\n    setCard({\n      ...card,\n      [e.target.name]: e.target.value,\n    })\n  };\n\n  function handleCreate() {\n    category.cards[card.title] = card;\n    db.collection('categories').doc(categoryId).set(category);\n  }\n\n  return (\n    <>\n      <div>\n        <label htmlFor=\"title\">Title</label>   \n        <input \n          name=\"title\"\n          value={card.title}\n          onChange={handleChange}\n        />\n      </div>\n      <br/>  \n      <div>\n        <label htmlFor=\"countryCode\">Country Code</label>   \n        <select\n          name=\"countryCode\"\n          value={card.countryCode}\n          onChange={handleChange}\n        >\n          <option value=\"uk\">UK</option>\n          <option value=\"us\">US</option>\n        </select>\n      </div>\n      <br/>  \n      <div>\n        <label htmlFor=\"img\">Image</label>   \n        <select\n          name=\"img\"\n          value={card.img}\n          onChange={handleChange}\n        >\n          {IMG_NAMES.map(img => (\n            <option value={img}>{img}</option>\n          ))}\n          <option value=\"us\">US</option>\n        </select>\n      </div>\n      <br/>        \n        { Object.entries(category.stats).map(([statKey, stat])  => (\n          <>    \n            <div>\n              <label htmlFor={statKey}>{stat.title}</label>   \n              <input \n                name={statKey}\n\n                // value={stat.title}\n                onChange={handleChange}\n              />\n            </div>\n            <br/>            \n          </>    \n        ))} \n      <button onClick={handleCreate}>Add</button>\n    </>\n  )\n}\n\nexport default CardsPage;","import React, { useEffect, useState } from \"react\";\nimport {db} from '../services/firestore';\nimport { useAuthContext } from '../components/AuthProvider';\nimport useDocument from '../hooks/useDocument';\nimport useCollection from '../hooks/useCollection';\nimport {useParams} from 'react-router-dom';\nimport {CategoryType, UserType, GameFormType} from '../types';\n\nconst IMG_NAMES = ['ant', 'ben', 'dan', 'didun', 'dt', 'grant', 'mike', 'morgan', 'nick', 'pearce', 'rob', 'scouse', 'stevooo', 'sunny'];\n\nfunction ChallengePage() {\n\n  const {currentUser} = useAuthContext();\n  console.log({currentUser});\n  const categories = useCollection<CategoryType>('categories');\n  const users = useCollection<any>('users');\n  console.log('USERS', users);\n\n  const [form, setForm] = useState<GameFormType>({categoryId: '', player2Id: ''});\n\n  const handleChange = (e: any) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    })\n  };\n\n  async function handleCreate() {\n    const category = categories && Object.values(categories).find(x => x.id = form.categoryId);\n    if (category && currentUser) {\n      const p2User = users?.find(u => u.id === form.player2Id);\n      console.log('P2 User', p2User);\n      const doc = await db.collection('games').add({\n        pack: category, \n        p1Id: currentUser.uid, \n        p1Username: currentUser.displayName, \n        p2Id: form.player2Id,\n        p2Username: p2User.username,\n        p1TurnNumber: 0,\n        p2TurnNumber: 0,\n        turnNumber: 0,\n      });\n      // alert('CREATED GAME', doc));\n    }\n    // db.collection('forms').doc(categoryId).update(updatedCard);\n  }\n\n  console.log('CHALLENGE DATA', form, categories, users);\n\n  if (!categories || !users) {\n    return (\n      <div>Loading...</div>\n    )\n  }\n\n  return (\n    <>\n      <div>NEW GAME</div>\n      <div>\n        <label htmlFor=\"categoryId\">Category</label>   \n        <select\n           name=\"categoryId\"\n           value={form.categoryId}\n           onChange={handleChange}\n         >\n            <option value=\"\">Select...</option> \n           {Object.values(categories).map((x: CategoryType) => ( \n            <option value={x.id}>{x.title}</option> \n           ))}\n         </select>\n       </div>\n       <div>\n        <label htmlFor=\"player2Id\">User</label>   \n        <select\n           name=\"player2Id\"\n           value={form.player2Id}\n           onChange={handleChange}\n         >\n          <option value=\"\">Select...</option> \n          {Object.values(users).map((x: UserType) => ( \n            <option value={x.id}>{x.username}</option> \n          ))}\n         </select>\n       </div>\n       <button onClick={handleCreate}>New Game</button>       \n    </>\n  )\n}\n\n// function InputEdit({categoryId, category, cardKey, cardItem}:  {categoryId: string; category: CategoryType, cardKey: string, cardItem: CardType}) {\n//   const [card, setCard] = useState<CardType>(cardItem);\n\n//   const handleChange = (e: any) => {\n//     setCard({\n//       ...card,\n//       [e.target.name]: e.target.value,\n//     })\n//   };\n\n//   function handleUpdate() {\n//     const updatedCard: {[id: string]: CardType} = {}; \n//     updatedCard[`card.${cardKey}`] = card;\n//     db.collection('categories').doc(categoryId).update(updatedCard);\n//   }\n\n//   function handleDelete() {\n//     console.log('CAT PRE DELETE', category, cardKey);\n//     delete category.cards[cardKey];\n//     console.log('CAT POST DELETE', category);\n//     db.collection('categories').doc(categoryId).set(category);\n//   }\n\n//   return (\n//     <>\n//       <div>\n//         <label htmlFor=\"title\">Title</label>   \n//         <input \n//           name=\"title\"\n//           value={card.title}\n//           onChange={handleChange}\n//         />\n//       </div>\n//       <br/>  \n//       <div>\n//         <label htmlFor=\"countryCode\">Country Code</label>   \n//         <select\n//           name=\"countryCode\"\n//           value={card.countryCode}\n//           onChange={handleChange}\n//         >\n//           <option value=\"uk\">UK</option>\n//           <option value=\"us\">US</option>\n//         </select>\n//       </div>\n//         { Object.entries(category.stats).map(([statKey, stat])  => (\n//           <>    \n//             <div>\n//               <label htmlFor={statKey}>{stat.title}</label>   \n//               <input \n//                 name={statKey}\n//                 type=\"number\"\n//                 value={card[statKey]}\n//                 onChange={handleChange}\n//               />\n//             </div>\n//             <br/>            \n//           </>    \n//         ))} \n//       <button onClick={handleUpdate}>Update</button>\n//       <button onClick={handleDelete}>Delete</button>\n//       <br/>\n//     </>\n//   )\n// }\n\n// function InputCreate({categoryId, category}: {categoryId: string; category: CategoryType}) {\n//   const [card, setCard] = useState<CardType>({\n//     title: '',\n//     countryCode: '',\n//   });\n\n//   const handleChange = (e: any) => {\n//     setCard({\n//       ...card,\n//       [e.target.name]: e.target.value,\n//     })\n//   };\n\n//   function handleCreate() {\n//     category.cards[card.title] = card;\n//     db.collection('categories').doc(categoryId).set(category);\n//   }\n\n//   return (\n//     <>\n//       <div>\n//         <label htmlFor=\"title\">Title</label>   \n//         <input \n//           name=\"title\"\n//           value={card.title}\n//           onChange={handleChange}\n//         />\n//       </div>\n//       <br/>  \n//       <div>\n//         <label htmlFor=\"countryCode\">Country Code</label>   \n//         <select\n//           name=\"countryCode\"\n//           value={card.countryCode}\n//           onChange={handleChange}\n//         >\n//           <option value=\"uk\">UK</option>\n//           <option value=\"us\">US</option>\n//         </select>\n//       </div>\n//       <br/>  \n//       <div>\n//         <label htmlFor=\"img\">Image</label>   \n//         <select\n//           name=\"img\"\n//           value={card.img}\n//           onChange={handleChange}\n//         >\n//           {IMG_NAMES.map(img => (\n//             <option value={img}>{img}</option>\n//           ))}\n//           <option value=\"us\">US</option>\n//         </select>\n//       </div>\n//       <br/>        \n//         { Object.entries(category.stats).map(([statKey, stat])  => (\n//           <>    \n//             <div>\n//               <label htmlFor={statKey}>{stat.title}</label>   \n//               <input \n//                 name={statKey}\n\n//                 // value={stat.title}\n//                 onChange={handleChange}\n//               />\n//             </div>\n//             <br/>            \n//           </>    \n//         ))} \n//       <button onClick={handleCreate}>Add</button>\n//     </>\n//   )\n// }\n\nexport default ChallengePage;","import React, { useEffect, useState } from \"react\";\nimport {getUsers} from '../services/firestore';\nimport { Link } from \"react-router-dom\";\nimport useCollection from '../hooks/useCollection';\nimport {GameType} from '../types';\nimport List from '../components/List';\nimport Loading from '../components/Loading';\nimport {TitleBar} from '../components/Layout';\n\nfunction GamesPage() {\n\n  const games = useCollection<any>('games');\n\n  const listItems = games?.map((game: GameType) => ({\n    title: `${game?.pack?.title}`,\n    description: `${game?.p1Username} vs ${game?.p2Username}`,\n    url: `/game/${game?.id}`\n  }));\n\n  if (!games) {\n    return (\n      <Loading/> \n    )\n  }\n\n  if (!listItems) {\n    return (\n      <div>No games.</div>\n    )\n  }\n\n  return (\n    <>\n      <TitleBar.Source>Games</TitleBar.Source>\n      <List items={listItems}/>\n    </>\n  )\n}\n\nexport default GamesPage;","import React from 'react';\nimport { Table, Image, Flag, Icon, SemanticICONS } from 'semantic-ui-react';\nimport { CardType, StatsType, StatParamType } from '../types';\nimport will from '../img/will.jpeg';\n\ntype PlayerType = null | 1 | 2;\n\ntype CardPropType = {\n  card: CardType;\n  stats: StatsType;\n  selectedStatKey: string | null | undefined;\n  disabled: boolean;\n  player: PlayerType;\n  result: undefined | null | 0 | 1 | 2;\n  onSelectStat: (params: StatParamType) => void;\n}\n\nfunction Card(props: CardPropType) {\n  const { card, stats, selectedStatKey, player, result, disabled } = props;\n  return (\n    <Table celled unstackable\n      size=\"small\"\n      selectable={!disabled}\n      style={{ width: '70%', marginLeft: 5 }\n      }>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell>{card.title.toUpperCase()}</Table.HeaderCell>\n          <Table.HeaderCell textAlign='center'>\n            {card.countryCode && <Flag name={card.countryCode} />}\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        <Table.Row>\n          <Table.Cell colSpan='2'>\n            <Image src={will} fluid />\n          </Table.Cell>\n        </Table.Row>\n        {\n          Object.entries(stats)\n          .sort((a, b) => b[0].localeCompare(a[0]))\n          .reverse()\n          .map(([statKey, stat]) => { // @TODO sort by key\n            const { title } = stat;\n            const value = card[statKey];\n            return (\n              <Row\n                key={statKey}\n                statKey={statKey}\n                selectedKey={selectedStatKey}\n                title={title}\n                value={value}\n                result={result}\n                player={player}\n                onSelectStat={() => props.onSelectStat({ statKey, title, value })}\n              />\n            )\n          })\n        }\n      </Table.Body>\n    </Table>\n  );\n}\n\ntype StatusType = 'positive' | 'negative' | 'warning';\n\ntype RowPropType = {\n  title: string;\n  value: string | number;\n  statKey: string;\n  selectedKey: string | null | undefined;\n  player: PlayerType;\n  result: undefined | null | 0 | 1 | 2;\n  onSelectStat: (statKey: number) => void;\n}\n\nfunction Row(props: RowPropType) {\n  const {title, value, statKey, selectedKey, onSelectStat, result, player} = props;\n  let status: StatusType | undefined;\n  if (statKey === selectedKey && result === 0) {\n    status = 'warning';\n  } else if (statKey === selectedKey && result === player) {\n    status = 'positive';\n  } else if (statKey === selectedKey && result !== player) {\n    status = 'negative';\n  }\n  return (\n    <Table.Row key={statKey} onClick={onSelectStat}>\n      <Cell status={status}>\n        {title}\n      </Cell>\n      <Cell status={status}>\n        {value}\n      </Cell>\n    </Table.Row>\n  )\n}\n\ntype CellPropType = {\n  status?: StatusType;\n  children: any;\n}\n\nfunction Cell(props: CellPropType) {\n  const { status, children } = props;\n  return (\n    <Table.Cell\n      positive={status === 'positive'}\n      negative={status === 'negative'}\n      warning={status === 'warning'}\n    >\n      {children}\n    </Table.Cell>\n  );\n}\n\nexport default Card;","import React, { useEffect, useCallback, useState } from \"react\";\nimport {getUsers} from '../services/firestore';\nimport {useParams} from 'react-router-dom';\nimport {db} from '../services/firestore';\nimport useCollection from '../hooks/useCollection';\nimport useDocument from '../hooks/useDocument';\nimport {CardsType, GameType, StatParamType} from '../types';\nimport Card from '../components/Card';\nimport { useAuthContext } from '../components/AuthProvider';\nimport {TitleBar, Footer} from '../components/Layout';\nimport { Button } from 'semantic-ui-react';\nimport Loading from '../components/Loading';\nimport styled from 'styled-components';\n\nfunction useGame(gameId: string) {\n\n  const game = useDocument<GameType>('games', gameId, true);\n  const stats = game?.pack.stats;\n  const [error, setError] = useState<string>();\n\n  // console.log('GAME', gameId, game);\n\n  // CURRENT PLAYER\n  const {currentUser} = useAuthContext();\n  const uid = currentUser?.uid;\n  let currentPlayer: null|1|2 = null;\n  let currentUsername;\n  let opponentUsername;\n  if (game?.p1Id === uid) {\n    currentPlayer = 1;\n    currentUsername = game?.p1Username;\n    opponentUsername = game?.p2Username;\n  } else if (game?.p2Id === uid) {\n    currentPlayer = 2;\n    currentUsername = game?.p2Username;\n    opponentUsername = game?.p1Username;\n  }\n  //  else {\n  //   currentPlayer = 1;\n  //   game && setError('You are not a player in this game!')\n  // }\n  const startingPlayer = Math.floor(Math.random() * 2) + 1;\n\n  // Shuffle and deal cards - should be a serverless cloud function but that requires a Blaze payment plan :(\n  useEffect(() => {\n    const cards = game?.pack?.cards;\n    const turns = game?.turns;\n    if (!cards || turns) return;\n    const [p1Cards, p2Cards] = deal(cards);\n    async function updateCards() {\n      await db.collection('games').doc(gameId).update({\n        turnNumber: 1,\n        p1TurnNumber: 1,\n        p2TurnNumber: 1,\n        \"turns.turn1\":  {\n          id: 1,\n          player: 1,\n          // player: startingPlayer,\n          p1Cards, \n          p2Cards,\n          statKey: null,\n          result: null,\n        }  \n      });\n    }\n    updateCards();    \n  }, [gameId, game]);  // @TODO change game to cards\n\n  // TURN\n  let turnNumber = game?.turnNumber;\n  const playerTurnNumber: number = game ? game[`p${currentPlayer}TurnNumber`] : 1;\n\n  let [currentTurn, setCurrentTurn] = useState<number>(playerTurnNumber); // rename to playerTurn\n  if (currentTurn !== playerTurnNumber) {\n    setCurrentTurn(playerTurnNumber);\n  }\n\n  const handleNextTurn = useCallback(() => {\n    const nextTurn = currentTurn+1;\n    if (nextTurn > turnNumber) {\n      console.log('HANDLE NEXT TURN STOP?', nextTurn, turnNumber);\n      // return null;\n    }\n    async function updateTurn() {\n      await db.collection('games').doc(gameId).update({\n        [`p${currentPlayer}TurnNumber`]: nextTurn,\n      });\n    }\n    updateTurn();   \n    setCurrentTurn(nextTurn);\n  } , [currentTurn, currentPlayer]);\n  \n  if (!currentPlayer) {\n    console.error('PLAYER NOT FOUND');\n  }\n\n  const turn = game && getTurn(game, currentTurn);\n  const turnPlayer = turn?.player;\n  const p1Cards = game && getTurnCards(game, currentTurn, 1);\n  const p2Cards = game && getTurnCards(game, currentTurn, 2);\n\n  // STATS\n  const [selectedStat, setSelectedStat] = useState<StatParamType|null>(null);\n\n  const handleSelectStat = useCallback((params: StatParamType) => {\n    if (turnPlayer === currentPlayer) {\n      setSelectedStat(params); \n    } \n  }, [turnPlayer, currentPlayer]);\n\n  const handleTurn = useCallback(() => {\n    if (!selectedStat || p1Cards.length === 0 || p2Cards.length === 0) {\n      return null;\n    }\n    let result: number;\n    let p1UpdatedCards: string[];\n    let p2UpdatedCards: string[];\n    let drawCards: string[] = [];\n\n    const {statKey} = selectedStat;\n    const [p1TopCard, ...p1HandCards] = p1Cards;\n    const [p2TopCard, ...p2HandCards] = p2Cards;\n    const p1Value = game?.pack.cards[p1TopCard][statKey];\n    const p2Value = game?.pack.cards[p2TopCard][statKey];\n\n    if (!p1Value || !p2Value) {\n      return null;\n    }\n\n    if (p1Value > p2Value) {\n      result = 1;\n      p1UpdatedCards = [...p1HandCards, p2TopCard, ...drawCards, p1TopCard];\n      p2UpdatedCards = [...p2HandCards]\n    } else if (p1Value < p2Value) {\n      result = 2;\n      p1UpdatedCards = [...p1HandCards];\n      p2UpdatedCards = [...p2HandCards, p1TopCard, ...drawCards, p2TopCard]\n    } else { // @TODO make first condition ===\n      result = 0;\n      p1UpdatedCards = [...p1HandCards];\n      p2UpdatedCards = [...p2HandCards]; \n      drawCards = [...drawCards, p1TopCard, p2TopCard,];\n    }\n\n    async function updateTurn() {\n      if (currentTurn == undefined) {\n        console.log('TURN COUNT UNDEFINED');\n        return null;\n      }\n      const nextTurn = currentTurn + 1;\n      const nextPlayer = result === 0 ? currentPlayer : result;\n      await db.collection('games').doc(gameId).update({\n        [`turns.turn${currentTurn}.statKey`]: statKey,\n        [`turns.turn${currentTurn}.result`]: result,\n        [`turns.turn${nextTurn}`]: {\n          id: nextTurn,\n          player: nextPlayer, \n          p1Cards: p1UpdatedCards,\n          p2Cards: p2UpdatedCards,\n          drawCards,\n          statKey: null,\n          result: null,\n        },\n        turnNumber: nextTurn,\n      });\n    }\n    updateTurn();\n    \n    setSelectedStat(null);\n\n  }, [selectedStat, game, p1Cards, p2Cards, currentTurn]);\n\n  if (!game || !p1Cards || !p2Cards) return {game, turn, currentTurn, currentPlayer, topCards: [], handleSelectStat};\n  const [p1TopCardKey] = p1Cards; \n  const p1TopCard = game?.pack.cards[p1TopCardKey];\n  const [p2TopCardKey] = p2Cards; \n  const p2TopCard = game?.pack.cards[p2TopCardKey];\n  const topCards = [p1TopCard, p2TopCard];\n\n  const debug = {\n    turnId: turn?.id, \n    turnNo: game.turnNumber,\n    p1TurnNo: game.p1TurnNumber,\n    p2TurnNo: game.p2TurnNumber,\n    currentPlayer, \n    turnPlayer, \n    turn\n  };\n\n  console.table({turnId: turn?.id, \n    turnNo: game.turnNumber,\n    p1TurnNo: game.p1TurnNumber,\n    p2TurnNo: game.p2TurnNumber,\n    currentPlayer, \n    turnPlayer,\n  });\n  console.table(game?.turns);\n  \n  console.log(debug);\n\n  console.log((selectedStat && !turn?.result), selectedStat, !turn?.result);\n\n  return {game, error, turn, currentTurn, turnPlayer, currentPlayer, currentUsername, opponentUsername, topCards, selectedStat, handleSelectStat, handleTurn, handleNextTurn, debug};\n}\n\nfunction deal(items: CardsType) {\n  let hand1 = [];\n  let hand2 = [];\n  const cards = Object.keys(items);\n  const numCards = cards.length / 2;\n\n  for (let i = 0; i < numCards; i++) {\n   const index = Math.floor(Math.random() * numCards);\n   const [item] = cards.splice(index, 1);\n   hand1.push(item);\n  }\n  hand2 = cards;\n  return [hand1, hand2];\n}\n\nfunction getTurn(game: GameType, turn: number) {\n  if (!game.turns || turn === 0) return null;\n  const turnKey = `turn${turn}`;\n  return turnKey in game.turns ? game.turns[turnKey] : null;\n}\n\nfunction getTurnCards(game: GameType, turn: number, playerNum: null|1|2) {\n  if (!game.turns || turn === 0) return [];\n  console.log('TURN DUMP', turn);\n  return game.turns[`turn${turn}`][`p${playerNum}Cards`];\n}\n\nfunction GamePage() {\n\n  const {gameId} = useParams<{gameId:string}>();\n  // const gameId = 'HBqQxN5sDoLwqiGkABRu';\n\n  const {game, error, turn, currentTurn, turnPlayer, currentPlayer, currentUsername, opponentUsername, topCards, selectedStat, handleSelectStat, handleTurn, handleNextTurn, debug} = useGame(gameId);\n  const [p1TopCard, p2TopCard] = topCards;\n\n  const currentCard = currentPlayer === 1 ? p1TopCard : p2TopCard;\n  const opponentCard = currentPlayer === 1 ? p2TopCard : p1TopCard;\n  const statKey = turn?.statKey;\n\n  let resultMsg;\n  let currentEmoji;\n  let opponentEmoji;\n\n  if (turn?.result === currentPlayer) {\n    resultMsg = 'Yay! You won the round! ✅';\n    currentEmoji = '😃';\n    opponentEmoji = '😢';\n  } else if (turn?.result === 0) {\n    resultMsg = 'Ok! You drew the round! ↔️';\n    currentEmoji = '😮';\n    opponentEmoji = '😮';\n  } else if (turn?.result) {\n    resultMsg = 'Oh noes! You lost the round! ❌';\n    currentEmoji = '😢';\n    opponentEmoji = '😃';\n  }\n\n  if (!game) return (\n    <Loading/> \n  );\n\n  // if (error) return (\n  //   <Message username=\"Games Master\">{error}</Message>\n  // );  \n\n  if (!currentCard && !opponentCard) {\n    return (\n      <Message username=\"Games Master\" color=\"green\">Good game! It's a draw! 🤷‍♂️</Message>\n    )\n    } else if (!opponentCard) {\n    return (\n      <Message username=\"Games Master\" color=\"green\">Good game! {currentUsername} wins! 🎉</Message>\n    )\n  } else if (!currentCard) {\n    return (\n      <Message username=\"Games Master\" color=\"green\">Good game! {opponentUsername} wins! ☠️</Message>\n    )\n  }\n  return (\n    <>\n    <TitleBar.Source>Game On!</TitleBar.Source>\n    {currentPlayer === turnPlayer ? (\n      <Message username=\"Games Master\" color=\"green\">Round {currentTurn}. Your turn {currentUsername}. Tap that stat!</Message>\n    ) : (\n      <Message username=\"Games Master\" color=\"green\">Round {currentTurn}. {opponentUsername}'s turn.</Message>\n    )}\n    {statKey && (\n      <>\n        {currentPlayer === turnPlayer ? (\n          <>\n            <Message username={currentUsername} align=\"right\" color=\"CornflowerBlue\">{game.pack.stats[statKey].title}: {currentCard[statKey]}</Message>\n            <Message username={opponentUsername} color=\"orange\">{game.pack.stats[statKey].title}: {opponentCard[statKey]} {opponentEmoji}</Message>\n          </>\n        ) : (\n          <>\n            <Message username={opponentUsername} color=\"orange\">{game.pack.stats[statKey].title}: {opponentCard[statKey]}</Message>\n            <Message username={currentUsername} align=\"right\" color=\"CornflowerBlue\">{game.pack.stats[statKey].title}: {currentCard[statKey]} {currentEmoji}</Message>\n          </>\n        )}        \n      </>\n    )}         \n    {resultMsg && (\n      <Message username=\"Games Master\" color=\"green\">{resultMsg}</Message>\n    )}\n    { currentCard && \n      <Card \n        card={currentCard} \n        stats={game.pack.stats}\n        selectedStatKey={turn?.statKey}\n        player={currentPlayer}\n        result={turn?.result && turn.result} // TODO fix\n        onSelectStat={handleSelectStat}\n        disabled={(turn?.result != null || turnPlayer !== currentPlayer)}\n      />\n     }\n     {/* <pre>\n       {JSON.stringify(debug, null, 2)}\n     </pre>      */}\n     <Footer>\n      {/* {(!selectedStat || !turn?.result) && 'You have X Cards in your hand'}  */}\n      {/* {(selectedStat || turn?.result === null) && ( */}\n      {(selectedStat && currentTurn === game.turnNumber && currentPlayer === turnPlayer) && (\n        <Button circular color='green' icon='play' size='huge' onClick={handleTurn} />\n      )}     \n      {(currentTurn < game.turnNumber && turn?.result != null) && ( \n        <Button circular color='green' icon='fast forward' size='huge' onClick={handleNextTurn} />\n      )}    \n     </Footer>\n    </>\n  )\n}\n\nconst StyledMessage = styled.div<{align: 'left'|'right', color: string}>`\n  float: ${props => props.align === 'right' ? 'right' : 'left' };\n  width: 90%;\n  margin: 5px;\n  padding: 5px;\n  border-radius: ${props => props.align === 'right' ? '10px 0px 10px 10px' : '0px 10px 10px 10px' };\n  background: ${props => props.align === 'right' ? '#dcf8c6' : 'white' };\n  border: 1px solid grey;\n  color: ${props => props.color};\n`;\n\nfunction Message({username, children, align = 'left', color}: {username: string, children: any; align?: 'left'|'right', color: string}) {\n  return (\n    <StyledMessage align={align} color={color}>\n      <b>{username}:</b><br/>\n      <span style={{color: 'black'}}>{children}</span>\n    </StyledMessage>\n  )  \n}\n\nexport default GamePage;","import React from \"react\";\nimport { Route, Switch, Link, Redirect } from \"react-router-dom\";\nimport AuthRoute from './AuthRoute';\nimport { useAuthContext } from './AuthProvider';\nimport SignUp from './SignUp';\nimport SignIn from './SignIn';\nimport SignOut from './SignOut';\n// import Game from './Game.txt';\nimport FriendsPage from '../pages/FriendsPage';\nimport CategoryPage from '../pages/CategoryPage';\nimport StatsPage from '../pages/StatsPage';\nimport CardsPage from '../pages/CardsPage';\nimport ChallengePage from '../pages/ChallengePage';\nimport GameListPage from '../pages/GamesPage';\nimport GamePage from '../pages/GamePage';\nimport List from '../components/List';\nimport {TitleBar} from '../components/Layout';\n\nfunction HomePage() {\n  const listItems = [\n    {title: 'Friends', url: '/friends'},\n    {title: 'Packs', url: '/categories'},\n    {title: 'Games', url: '/games'},\n    {title: 'New Game', url: '/challenge'},\n  ]\n  return (\n    <> \n      <TitleBar.Source>Top Trumps 🛋️</TitleBar.Source>\n      <List items={listItems}/>\n      <SignOut/>\n    </> \n  )\n}    \n\nfunction Router() {\n  // return <FriendsPage/>\n  return (\n    <Switch>\n\n       {/* Public Routes */}\n      <Route path=\"/signup\" component={SignUp} />\n      <Route path=\"/signin\" component={SignIn} />\n\n       {/* Private Routes */}\n      <AuthRoute path=\"/home\" component={HomePage} />\n      <AuthRoute path=\"/friends\" component={FriendsPage} />\n      <AuthRoute path=\"/categories\" component={CategoryPage} />\n      <AuthRoute path=\"/challenge\" component={ChallengePage} />\n      <AuthRoute path=\"/games\" component={GameListPage} />\n      <AuthRoute path=\"/game/:gameId\" component={GamePage} />\n      <AuthRoute path=\"/category/:categoryId/stats\" component={StatsPage} />\n      <AuthRoute path=\"/category/:categoryId/cards\" component={CardsPage} />\n      {/* <AuthRoute path=\"/game\" component={Game} /> */}\n      <AuthRoute path=\"/signout\" component={SignOut} />\n\n      <Redirect from=\"/\" to=\"/signin\" />\n    </Switch>\n  )\n};\n\nexport default Router;","import React, { useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n// import Layout from \"components/layout\";\nimport Router from \"./components/Router\";\nimport { signUp } from './services/firestore';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport Layout from './components/Layout';\nimport AuthProvider from './components/AuthProvider';\n\nfunction App() {\n\n  return (\n    <BrowserRouter>\n      {/* <Layout> */}\n      <AuthProvider>\n        <Layout>\n          <Router />\n        </Layout>\n      </AuthProvider>\n      {/* </Layout> */}\n    </BrowserRouter>\n  )\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}